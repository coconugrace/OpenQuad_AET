<launch>

<!-- Load joint controller configurations from YAML file to parameter server -->
<rosparam file="$(find open_quadruped)/config/control.yaml" command="load"/>

<param name="joy_node/dev" value="/dev/input/js1"/>
<node pkg="joy" type="joy_node" name="joy_node"/>
<node pkg="open_quadruped" type="interface_process.py" name="interface_process"/>

<!-- Convert an xacro and put on parameter server -->
<param name="robot_description" command="$(find xacro)/xacro.py $(find open_quadruped)/urdf/spot.urdf.xacro" />

<!-- Load the controllers -->
<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
  output="screen" ns="/open_quadruped" args="j1_pc j2_pc j3_pc j4_pc j5_pc j6_pc j7_pc j8_pc j9_pc j10_pc j11_pc j12_pc joint_state_controller"/>


<!-- convert joint states to TF transforms for rviz, etc -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
  <remap from="/joint_states" to="/open_quadruped/joint_states" />
</node>

<include file="$(find gazebo_ros)/launch/empty_world.launch">
  <arg name="paused" value="true"/>
  <arg name="use_sim_time" value="true"/>
  <arg name="gui" value="true"/>
  <arg name="debug" value="false"/>
</include>

<!-- Spawn a robot into Gazebo -->
<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model spot" />

</launch>
